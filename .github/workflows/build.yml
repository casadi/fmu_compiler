name: build

on: [push]

jobs:
  linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0 # for git-restore-mtime
          submodules: recursive
      - uses: chetan/git-restore-mtime-action@v1.2
      - run: docker run -u developer:$(id -g) --rm -v "$(pwd)":/local ghcr.io/casadi/openmodelica:18.04 bash -c "python3 compile-fmu.py"
      
      
      - name: Zip compiled FMUs (Linux)
        run: zip -r linux_fmus.zip *.fmu
      
      - name: Upload compiled FMUs as artifact (Linux)
        uses: actions/upload-artifact@2.4.0
        with:
          name: linux_fmus
          path: linux_fmus.zip

  windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0 # for git-restore-mtime
          submodules: recursive
      - uses: chetan/git-restore-mtime-action@v1.2
      - name: Install OpenModelica through Chocolatey
        run: choco install --ignore-checksums openmodelica -y
      - run: python compile-fmu.py

      - name: Zip compiled FMUs (Windows)
        run: Compress-Archive -Path "*.fmu" -DestinationPath "windows_fmus.zip"

      - name: Upload compiled FMUs as artifact (Windows)
        uses: actions/upload-artifact@2.4.0
        with:
          name: windows_fmus
          path: windows_fmus.zip

  mac_regular:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0 # for git-restore-mtime
          submodules: recursive
      - uses: chetan/git-restore-mtime-action@v1.2
      - run: |
             brew install autoconf automake openjdk pkg-config cmake make ccache
             echo 'export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"' >> ~/.zshrc
      - run: |
             git clone --recurse-submodules https://github.com/OpenModelica/OpenModelica.git
             cd OpenModelica
             git checkout v1.21.0
             cmake -S . -B build_cmake -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DOM_OMC_ENABLE_FORTRAN=OFF -DOM_OMC_ENABLE_IPOPT=OFF -D OM_ENABLE_GUI_CLIENTS=OFF -DCMAKE_PREFIX_PATH=/usr/local/opt/
             cmake --build build_cmake --target install
             
      - run: pip3 install OMPython
      - run: python3 compile-fmu.py

      - name: Zip compiled FMUs (macOS)
        run: zip -r mac_fmus.zip *.fmu

      - name: Upload compiled FMUs as artifact (macOS)
        uses: actions/upload-artifact@2.4.0
        with:
          name: mac_fmus
          path: mac_fmus.zip

  merge-and-upload:
    needs: [linux, windows, mac_regular] # This ensures it runs after all the other jobs
    runs-on: ubuntu-latest # You can choose another, but Linux is often easier for file manipulations
    steps:
    - name: Checkout code
      uses: actions/checkout@v3.3.0

    - name: Download all artifacts
      uses: actions/download-artifact@v3.0.2
      with:
        path: artifacts
      
    - name: Unzip and merge artifacts
      run: |
        unzip artifacts/linux_fmus.zip -d merged_fmus
        unzip artifacts/windows_fmus.zip -d merged_fmus
        unzip artifacts/mac_fmus.zip -d merged_fmus
        # Any additional merge operations can be added here

    - name: Zip merged artifacts
      run: zip -r merged_fmus.zip merged_fmus

    - name: Upload merged artifacts
      uses: actions/upload-artifact@v2
      with:
        name: merged_fmus
        path: merged_fmus.zip
      

