name: build

on: [push]

jobs:
  dockcross:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        target: [manylinux2014-x64,manylinux2014-x86,windows-shared-x64-posix]
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0 # for git-restore-mtime
          submodules: recursive
      - uses: chetan/git-restore-mtime-action@v1.2
      - name: Setup dockcross
        run: |
          docker pull ghcr.io/jgillis/${{ matrix.target }}:production
          docker run --rm --env DEFAULT_DOCKCROSS_IMAGE=ghcr.io/jgillis/${{ matrix.target }}:production ghcr.io/jgillis/${{ matrix.target }}:production > dockcross
          chmod +x dockcross
          pwd
          ls -al dockcross
      - run: ls
      - run: pwd
      - run: ./compile-dockcross.sh
      
      - name: Upload compiled FMUs as artifact (Linux)
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{matrix.target}}_fmus
          path: "*.fmu"

  mac_regular:
    needs: [dockcross]
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0 # for git-restore-mtime
          submodules: recursive
      - uses: chetan/git-restore-mtime-action@v1.2
      - uses: casadi/action-setup-compiler@master
        with:
          cache-suffix: ''
          target: x86_64
      - name: Download all artifacts
        uses: actions/download-artifact@v3.0.2
        with:
          name: manylinux2014-x64_fmus
      - run: ls
      - run: |
            # Loop through the .fmu files
            for f in *.fmu; do
            
                # Unzip the file
                unzip -q $f -d unzipped
                
                CC=${{ env.CC }} FC=${{ env.FC }} CXX=${{ env.CXX }} cmake -DCMAKE_OSX_SYSROOT=${{env.CONDA_BUILD_SYSROOT}} -Bbuild -DFMI_INTERFACE_HEADER_FILES_DIRECTORY=`pwd`/unzipped/sources/include -DRUNTIME_DEPENDENCIES_LEVEL=none -Hunzipped/sources
                
                cd unzipped && zip -r ../$f * && cd ..
            done


      - name: Zip compiled FMUs (Linux)
        run: zip -r mac_11_fmus.zip *.fmu
        
      - name: Upload compiled FMUs as artifact (Linux)
        uses: actions/upload-artifact@v3.1.2
        with:
          name: mac_11_fmus
          path: mac_11_fmus.zip
          
  merge-and-upload:
    needs: [dockcross, mac_regular]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3.3.0

    - name: Download all artifacts
      uses: actions/download-artifact@v3.0.2
      with:
        path: artifacts
      
    - name: Unzip and merge artifacts
      run: |
            for f in artifacts/*.zip; do
                unzip -o $f -d merged_fmus
                for ff in merged_fmus/*.fmu; do
                    unzip -o $ff -d $ff.unzipped
                done
            done

            for ff in merged_fmus/*.fmu; do
                cd $ff.unzipped && zip -r ../../$ff * && cd ../..
                rm -rf $ff.unzipped
            done

    - name: Upload merged artifacts
      uses: actions/upload-artifact@v3.1.2
      with:
        name: merged_fmus
        path: merged_fmus
